{"version":3,"sources":["components/layout/Header.js","components/layout/Footer.js","components/Pallet.js","modules/Connector.js","modules/GenericFunctions.js","modules/Setting.js","modules/BaseNode.js","modules/WaveformSelector.js","modules/Param.js","modules/PlayButton.js","modules/DeleteButton.js","modules/OscNode.js","modules/OutputNode.js","modules/GainNode.js","modules/ProfileSelector.js","modules/FilterNode.js","modules/LFONode.js","modules/EnvelopeNode.js","modules/SequencerNodeButtons.js","modules/IntegerParam.js","modules/SequencerNode.js","modules/FMNode.js","Workspace.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","displayAbout","setState","displaying","state","aboutText","aboutChangedStyle","this","fontSize","textAlign","padding","style","headerStyle","headerItemStyle","aboutStyle","onClick","React","Component","position","width","height","top","left","display","justifyContent","alignItems","background","border","color","flexBasis","cursor","footerStyle","bottom","right","Footer","Pallet","toggleNodeHandlerDisplay","e","preventDefault","forceUpdate","types","palletItems","i","length","push","key","type","createNodeHandlers","palletStyle","palletItemStyle","PalletItem","flexGrow","fontWeight","Connector","updatedSelectedState","isSelected","selected","clearInterval","timerID","handleClick","id","audioNode","select","selection","getSelection","setInterval","getColors","RegExp","test","stroke","strokeActive","fill","fillActive","isInput","getTranslation","dim","replace","undefined","filter","element","vis","colors","transformToInputPosition","coordinates","x","y","strokeWidth","boundary","className","cx","cy","r","GenericFunctions","value","target","param","relValue","newObj","tag","linearRampToValueAtTime","absValue","audioContext","currentTime","Setting","convertValueToDeg","handleMouseDown","dragging","handleMouseUp","handleMouseMove","boundingRect","boundingBox","current","getBoundingClientRect","mouseX","clientX","clampValue","changeValue","readout","name","Math","max","min","handleMouseLeave","createRef","touchRange","document","addEventListener","rotation","bind","ref","onMouseDown","transform","rx","ry","font","BaseNode","initParams","dsp","osc","frequency","gain","togglePlay","isPlaying","changeFrequency","newValue","changeGain","createOscillator","createGain","boundaries","minFrequency","minGain","maxFrequency","maxGain","connect","start","rebuildLineComponents","stop","unit","step","deleteNode","float","backgroundColor","borderColor","WaveformSelector","newIndex","waveformIndex","waveforms","changeWaveform","displayWaveform","sine","d","triangle","square","sawtooth","Param","abs","fromRelToAbs","rel","fromAbsToRel","_relValue","_absValue","PlayButton","getStartIcon","points","getStopIcon","displayIcon","constant","offset","frequencies","OscNode","initInputs","frequencyInput","newWaveform","waveform","keysToNoteOffsetDict","keyHandlerComponents","keyEventName","KEYPRESS","keyValue","onKeyHandle","keyPressHandler","minFreq","maxFreq","inputs","outputs","octave","cleanUp","midiNoteNumber","midiNoteOffset","event","getFrequencyFromKey","Fragment","handle","onDrag","topStyle","gridColumStart","gridTemplateColumns","flexDirection","alignContent","margin","OutputNode","destination","touchAction","GainNode","ProfileSelector","profileIndex","profiles","changeProfile","displayProfile","lowpass","highpass","bandpass","notch","allpass","FilterNode","Q","qInput","newProfile","createBiquadFilter","LFONode","EnvelopeNode","toggleIsPlaying","triggerEnvelope","constantSource","cancelScheduledValues","console","log","targetGain","aLevel","node","endTimes","attack","decay","release","sustain","createConstantSource","SequencerNodeButtons","getButtons","rowCount","ceil","beats","buttons","currentRow","buttonsLeft","currentRowLength","xOffset","betweenDistance","active","toString","IntegerParam","round","SequencerNode","initializeActiveBeats","updatedBeats","activeBeats","nextNote","secondsPerBeat","bpm","sequencer","nextNoteTime","currentNote","scheduleNote","beatNumber","time","notesInQueue","note","find","index","array","sendSignal","scheduler","scheduleAheadTime","dequeueNotes","window","setTimeout","lookahead","splice","gate","internalEnvelope","a","clearTimeout","changeBPM","changeBeats","pop","renderSequencerButtons","toggleBeat","beatOffsets","setValueAtTime","FMNode","Workspace","getNextFreeId","sameTypeNodes","nodes","sort","b","createNode","newNode","updatedNodes","getUpdatedSelection","info","updatedSelection","storeConnection","output","input","connection","lineComponent","buildLineComponentFromConnection","existingConnections","lineComponents","removeStoredConnection","updatedConnections","existingConnection","from","to","connectionExists","sortSelection","first","second","isSelectionValidConnection","firstNodeName","slice","indexOf","secondNodeName","toggleConnection","disconnect","alert","some","_updatedSelection","nodeName","startsWith","nextConnections","nextLineComponents","readoutState","timer","text","concat","Number","toPrecision","hidden","fadeTime","AudioContext","getConnectionColor","lineStyle","newReadoutStyle","readoutStyle","visibility","onScroll","overflow","zIndex","borderStyle","borderWidth","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfd4f1d6.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displaying: false,\n      aboutText: 'About',\n    }\n  }\n\n  displayAbout = () => {\n    this.setState({\n      displaying: !this.state.displaying,\n      aboutText: this.state.displaying ? 'About' : 'Made by Ian Fennie & Yannick Clausen',\n    });\n  }\n\n  render() {\n    let aboutChangedStyle;\n    if(this.state.displaying) {\n      aboutChangedStyle = {fontSize: '10px', textAlign: 'center', padding:'auto'}\n    } else {\n      aboutChangedStyle = {};\n    }\n    return (\n      <header style={headerStyle}>\n        <div style={headerItemStyle}>\n          <h1>NoiseNodes</h1>\n        </div>\n        <div style={{...headerItemStyle,...aboutStyle,...aboutChangedStyle}} onClick={this.displayAbout}>\n          <h1>{this.state.aboutText}</h1>\n        </div>\n      </header>\n    )\n  }\n\n}\n\nconst headerStyle = {\n    position: 'fixed',\n    width: '100%',\n    height: '75px',\n    top: '0px',\n    left: '0px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    background: 'var(--primary-shade3)',\n    border: '1px solid black',\n    color: 'white',\n}\n\nconst headerItemStyle = {\n    height: '75px',\n    flexBasis: '250px',\n    background: 'var(--primary-shade4)',\n    cursor: 'default',\n}\n\nconst aboutStyle = {\n    // alignSelf: 'stretch',\n    // alignContent: 'center',\n    // flexShrink: '1',\n    cursor: 'pointer',\n }\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <div style={footerStyle}>HAW Hamburg AVPRG W19</div>\n    );\n}\n\nconst footerStyle = {\n    width: '100%',\n    position: 'fixed',\n    bottom: '0px',\n    right: '0px',\n    padding: '5px',\n    background: 'var(--primary-shade3)',\n    textAlign: 'right',\n    fontSize: '10px',\n    color: 'white'\n}\n\nexport default Footer;\n","import React from 'react';\n\nclass Pallet extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          displaying: false,\n        };\n    }\n\n    toggleNodeHandlerDisplay = (e) => {\n      e.preventDefault();\n      this.setState({\n        displaying: !this.state.displaying,\n      });\n      this.forceUpdate();\n    }\n\n    render() {\n      const types = ['OSC', 'GAIN', 'FILTER', 'LFO', 'ENV', 'SEQ', 'FM'],\n            palletItems = [];\n\n        for (var i = 0; i < types.length; i++) {\n          palletItems.push(<PalletItem key={i} type={types[i]} createNodeHandlers={this.props.createNodeHandlers}/>);\n        }\n\n        return (\n            <div style={palletStyle} onClick={this.toggleNodeHandlerDisplay}>\n                <button style={palletItemStyle} onClick={this.toggleNodeHandlerDisplay}>+</button>\n                {this.state.displaying ? palletItems : null}\n            </div>\n        );\n    }\n}\n\nclass PalletItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {type: this.props.type};\n    }\n\n    render() {\n      return (\n        <button onClick={this.props.createNodeHandlers[this.state.type]} style={{...palletItemStyle}}>\n          {this.state.type}\n        </button>\n        );\n    }\n}\n\nconst palletStyle = {\n    position: 'fixed',\n    top: '75px',\n    display: 'flex',\n    flexGrow: '1',\n    justifyContent: 'space-around',\n    background: 'var(--primary-shade3)',\n}\n\nconst palletItemStyle = {\n    flexBasis: '55px',\n    border: 'none',\n    padding: '8px 15px 6px',\n    background: 'var(--primary-shade2)',\n    fontSize: '24px',\n    fontWeight: 'bold',\n    color: 'white',\n    cursor: 'pointer',\n}\n\nexport default Pallet;\n","import React from 'react';\n\nclass Connector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false,\n      selection: [null, null],\n    }\n    this.vis = {\n      height: 50,\n      width: 50,\n      dim: 16,\n      colors: this.getColors(),\n      isInput: this.isInput(),\n      transformToInputPosition: 'translate(x y)'.replace('x',  this.props.coordinates.x).replace('y', this.props.coordinates.y),\n    }\n    this.vis.strokeWidth = this.vis.dim/3 * 2;\n    this.vis.boundary = this.vis.dim+this.vis.strokeWidth;\n    this.timerID = null;\n  }\n\n  componentDidMount() {\n  }\n\n  updatedSelectedState = () => {\n    const isSelected = this.isSelected();\n    this.setState({selected: isSelected})\n    if(!isSelected) {\n      clearInterval(this.timerID);\n    }\n  }\n\n  handleClick = (e) => {\n    const {id, type, audioNode} = this.props;\n    this.props.select(id, type, audioNode);\n    this.setState( (state, props) => {\n      return {\n        selected: this.isSelected(),\n        selection: this.props.getSelection()\n      }\n    });\n    setInterval(this.updatedSelectedState, 100);\n  }\n\n  getColors = () => {\n    if(RegExp('audio-.*').test(this.props.type)) {\n      return {stroke: 'var(--secondary1-shade1)', strokeActive: 'var(--secondary1-shade3)', fill: 'var(--secondary1-shade0)', fillActive: 'var(--secondary1-shade1)'}\n    } else if(RegExp('control-.*').test(this.props.type)) {\n      return {stroke: 'var(--secondary2-shade1)', strokeActive: 'var(--secondary2-shade3)', fill: 'var(--secondary2-shade0)', fillActive: 'var(--secondary2-shade1)'}\n    }\n  }\n\n  isInput = () => {\n    return RegExp('.-input').test(this.props.type);\n  }\n\n  getTranslation = (height, width, dim) => {\n    if (this.isInput()) {\n      return 'translate(x y)'.replace('x',  2 * ( -width + dim)).replace('y', -20);\n    } else {\n      return 'translate(x y)'.replace('x', (dim/3)).replace('y', -20);\n    }\n  }\n\n  isSelected = () => {\n    const selection = this.props.getSelection();\n    if(typeof selection != undefined) {\n      for (let selected of selection.filter((element) => element !== null)) {\n        return (this.props.id === selected.id) && (this.props.audioNode === selected.audioNode);\n      }\n    }\n  }\n\n  render() {\n    let height = 65,\n        width = 50,\n        dim = 16,\n        strokeWidth = dim/3 * 2,\n        boundary = dim+strokeWidth,\n        colors = this.getColors(),\n        isInput = this.isInput();\n\n    return <svg\n      className={this.props.id}\n      height={height}\n      width={width}\n      style={{cursor: 'pointer', position: 'relative', left: this.props.coordinates.x, top: this.props.coordinates.y}}\n      >\n      <circle\n         cx={isInput ? boundary : width - boundary}\n         cy={dim + strokeWidth}\n         r={dim}\n         stroke={this.state.selected ? colors.strokeActive : colors.stroke}\n         strokeWidth={strokeWidth}\n         fill={this.state.selected ? colors.fillActive : colors.fill}\n         onClick={this.handleClick}\n       />\n    </svg>\n  }\n}\n\nexport default Connector;\n","export default class GenericFunctions {\n  static changeValue(value, target, param) {\n      const relValue = value;\n      let newObj = this.state[param.tag];\n      newObj.relValue = relValue;\n      this.setState({[param.tag]: newObj}, ()=> {\n         //target.value = this.state[param.tag].absValue;\n         target.linearRampToValueAtTime(this.state[param.tag].absValue, this.props.audioContext.currentTime + 0.1);\n      });\n    }\n\n  static getColors() {\n      if(this.props.type === 'audio') {\n        return [\n          'var(--secondary1-shade0)',\n          'var(--secondary1-shade1)',\n          'var(--secondary1-shade2)',\n          'var(--secondary1-shade3)',\n          'var(--secondary1-shade4)',\n          'var(--secondary1-shade5)',\n        ]\n      } else if (this.props.type === 'control') {\n        return [\n          'var(--secondary2-shade0)',\n          'var(--secondary2-shade1)',\n          'var(--secondary2-shade2)',\n          'var(--secondary2-shade3)',\n          'var(--secondary2-shade4)',\n          'var(--secondary2-shade5)',\n        ]\n      }\n    }\n}\n","import React from 'react';\nimport '../style/colors.css';\nimport GenericFunctions from './GenericFunctions';\n\nexport default class Setting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false,\n      boundingBox: React.createRef(),\n    }\n    this.vis = {\n      r: 20,\n    }\n    this.vis.width = this.vis.r * 4;\n    this.vis.height = this.vis.r * 3.5;\n    this.vis.cx = (this.vis.width - (this.vis.r / 2)) / 2;\n    this.vis.cy = (this.vis.height - (this.vis.r * 0.8)) / 2;\n    this.touchRange = this.vis.r * 4;\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseup', this.handleMouseUp);\n    document.addEventListener('mouseleave', this.handleMouseLeave);\n  }\n\n  convertValueToDeg = (value) => {\n    return value * 270 - 135;\n  }\n\n  handleMouseDown = (e) => {\n    e.preventDefault();\n    this.setState({\n      dragging: true,\n    });\n  }\n\n  handleMouseUp = (e) => {\n    e.preventDefault();\n    this.setState({\n      dragging: false,\n    });\n  }\n\n  handleMouseMove = (e) => {\n    e.preventDefault();\n    if(this.state.dragging) {\n            const factor = 1.2,\n              offset = 0.1, // scale input to fit better\n              boundingRect = this.state.boundingBox.current.getBoundingClientRect(),\n              mouseX = e.clientX - boundingRect.left,\n              relValue = this.clampValue(factor * mouseX / boundingRect.width - offset); // clamp value\n      this.props.changeValue(relValue, this.props.target, this.props.value);\n      this.props.readout(this.props.name, this.props.value)\n    }\n  }\n\n  clampValue = (value) => Math.max(0, Math.min( 1, value));\n\n  // this is ugly but prevents bugs for now\n  handleMouseLeave = (e) => {\n    e.preventDefault();\n    if(this.state.dragging) {\n      this.handleMouseUp(e);\n    }\n  }\n\n  render() {\n    const {name} = this.props;\n    const {cx, cy, r, width, height} = this.vis;\n    const rotation = 'rotate(' + this.convertValueToDeg(this.props.value.relValue) + ' ' + cx + ' ' + cy + ')',\n          colors = GenericFunctions.getColors.bind(this)();\n    return (\n        <svg\n          style={{position: 'relative', cursor: this.state.dragging ? 'pointer' : 'default'}}\n          width={width}\n          height={height}\n          ref={this.state.boundingBox}>\n          <g\n            onMouseDown={this.handleMouseDown}\n            transform={rotation}\n            style={{cursor: 'pointer'}}\n            >\n            <circle cx={cx} cy={cy} r={r} fill={colors[1]}/>\n            <ellipse cx={cx} cy={cy -10} rx={r * 0.4} ry={r * 0.5} fill={colors[3]}/>\n          </g>\n          <text\n            x={cx-(name.length * 4)}\n            y={height-4}\n            style={{font: 'regular 12px sans-serif', fill:'#fff', cursor: 'default'}}\n            >\n            {name}\n          </text>\n        </svg>\n    );\n  }\n}\n\n//: {Number(Number(value.absValue).toPrecision(2))} {unit}\n","import React from 'react';\nimport Connector from './Connector';\nimport Setting from './Setting';\n\nclass BaseNode extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.name = 'BaseNode' + this.props.id;\n      this.dsp = {\n        osc: this.props.audioContext.createOscillator(),\n        gain: this.props.audioContext.createGain(),\n      };\n      this.boundaries = {\n        minFrequency: 20,\n        minGain: 0,\n        maxFrequency: 2000,\n        maxGain: 1,\n      };\n      this.state = {\n        isPlaying: false,\n        frequency: 440,\n        gain: 0.5,\n      };\n  }\n\n  componentDidMount() {\n    const {osc, gain} = this.dsp;\n    this.initParams();\n    osc.connect(gain);\n    osc.start();\n    this.props.rebuildLineComponents();\n  }\n\n  componentWillUnmount() {\n    this.dsp.osc.stop();\n    this.props.rebuildLineComponents();\n  }\n\n  initParams = () => {\n    this.dsp.osc.frequency.value = this.state.frequency;\n    this.dsp.gain.gain.value = 0;\n  }\n\n  // FOR TESTING\n  togglePlay = () => {\n    if(!this.state.isPlaying) {\n      this.setState({isPlaying: !this.state.isPlaying});\n      this.dsp.gain.gain.value = this.state.gain;\n    } else {\n      this.setState({isPlaying: !this.state.isPlaying});\n      this.dsp.gain.gain.value = 0;\n    }\n  }\n\n  changeFrequency = (e) => {\n    const {osc} = this.dsp;\n    const newValue = e.target.value;\n    this.setState({frequency: newValue}, ()=> {\n      osc.frequency.value = newValue;\n    });\n  }\n\n  changeGain = (e) => {\n    const {gain} = this.dsp;\n    const newValue = e.target.value;\n    this.setState({gain: newValue}, ()=> {\n      gain.gain.value = newValue;\n    });\n  }\n\n  render() {\n    return (\n      <div style={style}className='BaseNode'>\n        <h1>{this.name}</h1>\n        <Setting\n          name='Frequency'\n          unit='Hz'\n          changeValue={this.changeFrequency}\n          step='0.1'\n          value={this.state.frequency}\n          min={this.boundaries.minFrequency}\n          max={this.boundaries.maxFrequency}\n        />\n        <Setting\n          name='Gain'\n          unit=''\n          changeValue={this.changeGain}\n          step='0.1'\n          value={this.state.gain}\n          min={this.boundaries.minGain}\n          max={this.boundaries.maxGain}\n        />\n        <button onClick={this.togglePlay}>{this.state.isPlaying ? 'Stop' : 'Start'}</button>\n        <Connector type='audio-output' id={this.name + '_audio-output-1'} audioNode={this.dsp.gain} select={this.props.select}/>\n        <button onClick={this.props.deleteNode.bind(this, this.name)}>[X]</button>\n      </div>\n    );\n  }\n}\n\nconst style = {\n  width:'200px',\n  height:'350px',\n  float: 'left',\n  backgroundColor: 'var(--secondary1-shade0)',\n  padding: '16px',\n  border: '8px solid',\n  borderColor: 'var(--secondary1-shade3)',\n}\n\nexport default BaseNode;\n","import React from 'react';\n\nclass WaveformSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      waveformIndex: 0};\n    this.waveforms = ['sine', 'triangle', 'square', 'sawtooth'];\n    this.vis = {\n      r: 32,\n      colors: this.getColors(),\n    }\n    this.vis.width = 2 * this.vis.r;\n    this.vis.height = 2.5 * this.vis.r;\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const newIndex = (this.state.waveformIndex + 1) % this.waveforms.length;\n    this.setState( (state, props) => {\n      this.props.changeWaveform(this.waveforms[newIndex]);\n      return { waveformIndex: newIndex};\n    });\n  }\n\n  displayWaveform = () => {\n    const waveformPaths = {\n        sine: <path\n          fill={'none'}\n          stroke={'#fff'}\n          strokeWidth={1.5}\n          d=\"\n            M -32,0\n            Q -16,-32 0,0\n            M 0,0\n            Q 16,32 32,0\n          \"\n          />,\n        triangle: <path\n          fill={'none'}\n          stroke={'#fff'}\n          strokeWidth={1.5}\n          d=\"\n            M -32,0\n            L -16,-16\n            M -16,-16\n            L 0,0\n            M 0,0\n            L 16,16\n            M 16,16\n            L 32,0\n          \"\n          />,\n        square: <path\n          fill={'none'}\n          stroke={'#fff'}\n          strokeWidth={1.5}\n          d=\"\n            M -24,-16\n            L 0,-16\n            M 0,-16\n            L 0,16\n            M 0,16\n            L 24,16\n          \"\n          />,\n        sawtooth: <path\n            fill={'none'}\n            stroke={'#fff'}\n            strokeWidth={1.5}\n            d=\"\n            M -24,0\n            L -24,-16\n            M -24,-16\n            L 24,16\n            M 24,16\n            L 24,0\n            \"\n            />,\n        };\n    return waveformPaths[this.waveforms[this.state.waveformIndex]];\n  }\n\n  getColors = () => {\n    if(this.props.type === 'audio') {\n      return [\n        'var(--secondary1-shade0)',\n        'var(--secondary1-shade1)',\n        'var(--secondary1-shade2)',\n        'var(--secondary1-shade3)',\n        'var(--secondary1-shade4)',\n        'var(--secondary1-shade5)',\n      ]\n    } else if (this.props.type === 'control') {\n      return [\n        'var(--secondary2-shade0)',\n        'var(--secondary2-shade1)',\n        'var(--secondary2-shade2)',\n        'var(--secondary2-shade3)',\n        'var(--secondary2-shade4)',\n        'var(--secondary2-shade5)',\n      ]\n    }\n  }\n\n  render () {\n    const {width, height, r, colors} = this.vis;\n    return (\n      <div id='WaveformSelector'>\n        <svg\n          width={width}\n          height={height}\n          onClick={this.handleClick}\n          >\n          <g\n            transform={'translate(x y)'.replace('x', width/2).replace('y', height/2)}\n            style={{cursor: 'pointer'}}\n            >\n            <circle\n              style={{fill: colors[1]}}\n              r={r}\n              />\n            {this.displayWaveform()}\n          </g>\n        </svg>\n      </div>\n    )\n\n  }\n}\n\nexport default WaveformSelector;\n","class Param {\n  constructor(tag, abs, min, max) {\n    this.tag = tag;\n    this.min = min;\n    this.max = max;\n    this._relValue = this.fromAbsToRel(abs);\n    this._absValue = abs;\n  }\n\n  set relValue(newValue) {\n    this._relValue = newValue;\n    this._absValue = this.fromRelToAbs(newValue);\n  }\n\n  set absValue(newValue) {\n    this._absValue = newValue;\n    this._relValue = this.fromAbsToRel(newValue);\n  }\n\n  get relValue() {\n    return this._relValue;\n  }\n\n  get absValue() {\n    return this._absValue;\n  }\n\n  fromRelToAbs = (rel) => {\n    return (this.max - this.min) * rel + this.min;\n  }\n\n  fromAbsToRel = (abs) => {\n    let rel = (abs - this.min) / (this.max - this.min);\n    return rel;\n  }\n}\n\nexport default Param;\n","import React from 'react';\nimport GenericFunctions from './GenericFunctions';\n\nexport default class PlayButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false,\n    };\n    this.vis = {\n      dim: 12,\n      colors: GenericFunctions.getColors.bind(this)(),\n    };\n    this.vis.strokeWidth = this.vis.dim/3 * 2;\n    this.vis.boundary = this.vis.dim+this.vis.strokeWidth;\n    this.vis.height = this.vis.dim*3;\n    this.vis.width =  this.vis.dim*3;\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({\n      isPlaying: !this.state.isPlaying,\n    });\n    this.props.onClick();\n  }\n\n  getStartIcon = () => {\n    const {height, width, dim, colors} = this.vis,\n          x = width/2,\n          y = height/2,\n          factor = 0.8;\n    return <polygon\n      points={\n        [x+dim*factor, y] + \", \" +\n        [(x-dim/2), y+dim*factor] + \", \" +\n        [(x-dim/2), y-dim*factor]\n      }\n      fill={colors[4]}/>;\n  }\n\n  getStopIcon = () => {\n    const {height, width, dim, colors} = this.vis,\n          x = width/2,\n          y = height/2,\n          factor = 1.3;\n    return <rect\n      x={x - dim/2 * factor}\n      y={y - dim/2 * factor}\n      width={dim * factor}\n      height={dim * factor}\n      fill={colors[4]}/>;\n  }\n\n  displayIcon = () => {\n    if(this.props.constant) {\n      return this.getStartIcon();\n    }\n    if (this.state.isPlaying) {\n      return this.getStopIcon();\n    } else {\n      return this.getStartIcon();\n    }\n  }\n\n  render () {\n    const {height, width, dim, strokeWidth, colors} = this.vis;\n    return <svg\n      height={height}\n      width={width}\n      style={{cursor: 'pointer'}}\n      >\n      <g onClick={this.handleClick}>\n        <circle\n          cx={width/2}\n          cy={height/2}\n          r={dim}\n          stroke={colors[1]}\n          strokeWidth={strokeWidth}\n          fill={colors[1]}\n          />\n        {this.displayIcon()}\n      </g>\n    </svg>\n  }\n}\n","import React from 'react';\nimport GenericFunctions from './GenericFunctions';\n\nexport default class PlayButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.vis = {\n      dim: 12,\n      colors: GenericFunctions.getColors.bind(this)(),\n    };\n    this.vis.strokeWidth= this.vis.dim/3 * 1.5;\n    this.vis.boundary= this.vis.dim+this.vis.strokeWidth;\n    this.vis.height = this.vis.dim*3;\n    this.vis.width =  this.vis.dim*3;\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.props.onClick();\n  }\n\n  displayIcon = () => {\n    const {height, width, dim, strokeWidth, colors} = this.vis;\n    const x = width/2,\n          y = height/2,\n          factor = 1.5,\n          offset = (2.2 - factor) * dim;\n    return <polygon\n      points={\n        [x-offset, y-offset] + \" \" +\n        [x-offset+strokeWidth/2, y-offset] + \" \" +\n        [x, y-strokeWidth/3]  + \" \" +\n        [x+offset-strokeWidth/2, y-offset] + \" \" +\n        [x+offset, y-offset] + \" \" +\n        [x+strokeWidth/3, y]  + \" \" +\n        [x+offset, y+offset] + \" \" +\n        [x+offset-strokeWidth/2, y+offset] + \" \" +\n        [x, y+strokeWidth/3]  + \" \" +\n        [x-offset+strokeWidth/2, y+offset] + \" \" +\n        [x-offset, y+offset] + \" \" +\n        [x-offset, y+offset] + \" \" +\n        [x-strokeWidth/3, y]\n      }\n      fill={colors[4]}\n      stroke={colors[4]}\n      strokeWidth={strokeWidth/4}\n      />;\n  }\n\n\n  render () {\n    const {height, width, dim, strokeWidth, colors} = this.vis;\n    return <svg\n      height={height}\n      width={width}\n      style={{cursor: 'pointer'}}\n      >\n      <g onClick={this.handleClick}>\n        <circle\n          cx={width/2}\n          cy={height/2}\n          r={dim}\n          stroke={colors[1]}\n          strokeWidth={strokeWidth}\n          fill={colors[1]}\n          />\n        {this.displayIcon()}\n      </g>\n    </svg>\n  }\n}\n","import React from 'react';\nimport Connector from './Connector';\nimport Setting from './Setting';\nimport WaveformSelector from './WaveformSelector';\nimport Param from './Param';\nimport GenericFunctions from './GenericFunctions';\nimport PlayButton from './PlayButton';\nimport DeleteButton from './DeleteButton';\nimport Draggable from 'react-draggable';\nimport KeyHandler, { KEYPRESS } from 'react-key-handler';\n\nvar frequencies = [\n  8.1757989156,       8.6619572180,       9.1770239974,\n  9.7227182413,       10.3008611535,      10.9133822323,\n  11.5623257097,      12.2498573744,      12.9782717994,\n  13.7500000000,      14.5676175474,      15.4338531643,\n  16.351597831287414, 17.323914436054505, 18.354047994837977,\n  19.445436482630058, 20.601722307054366, 21.826764464562746,\n  23.12465141947715,  24.499714748859326, 25.956543598746574,\n  27.5,               29.13523509488062,  30.86770632850775,\n  32.70319566257483,  34.64782887210901,  36.70809598967594,\n  38.890872965260115, 41.20344461410875,  43.653528929125486,\n  46.2493028389543,   48.999429497718666, 51.91308719749314,\n  55,                 58.27047018976124,  61.7354126570155,\n  65.40639132514966,  69.29565774421802,  73.41619197935188,\n  77.78174593052023,  82.4068892282175,   87.30705785825097,\n  92.4986056779086,   97.99885899543733,  103.82617439498628,\n  110,                116.54094037952248, 123.47082531403103,\n  130.8127826502993,  138.59131548843604, 146.8323839587038,\n  155.56349186104046, 164.81377845643496, 174.61411571650194,\n  184.9972113558172,  195.99771799087463, 207.65234878997256,\n  220,                233.08188075904496, 246.94165062806206,\n  261.6255653005986,  277.1826309768721,  293.6647679174076,\n  311.1269837220809,  329.6275569128699,  349.2282314330039,\n  369.9944227116344,  391.99543598174927, 415.3046975799451,\n  440,                466.1637615180899,  493.8833012561241,\n  523.2511306011972,  554.3652619537442,  587.3295358348151,\n  622.2539674441618,  659.2551138257398,  698.4564628660078,\n  739.9888454232688,  783.9908719634985,  830.6093951598903,\n  880,                932.3275230361799,  987.7666025122483,\n  1046.5022612023945, 1108.7305239074883, 1174.6590716696303,\n  1244.5079348883237, 1318.5102276514797, 1396.9129257320155,\n  1479.9776908465376, 1567.981743926997,  1661.2187903197805,\n  1760,               1864.6550460723597, 1975.533205024496,\n  2093.004522404789,  2217.4610478149766, 2349.31814333926,\n  2489.0158697766,    2637.02045530296,   2793.825851464031,\n  2959.955381693075,  3135.9634878539946, 3322.437580639561,\n  3520,               3729.3100921447194, 3951.066410048992,\n  4186.009044809578,  4434.922095629953,  4698.63628667852,\n  4978.031739553295,  5274.04091060592,   5587.651702928062,\n  5919.91076338615,   6271.926975707989,  6644.875161279122,\n  7040,               7458.620184289437,  7902.132820097988,\n  8372.018089619156,  8869.844191259906,  9397.272573357044,\n  9956.06347910659,   10548.081821211836, 11175.303405856126,\n  11839.8215267723,   12543.853951415975];\n\nclass OscNode extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.name = 'OscNode' + this.props.id;\n      this.dsp = {\n        osc: this.props.audioContext.createOscillator(),\n        gain: this.props.audioContext.createGain(),\n        frequencyInput: this.props.audioContext.createGain(),\n      }\n      this.minFreq = 20;\n      this.maxFreq = 2000;\n      this.state = {\n        isPlaying: false,\n        waveform: 'sine',\n        frequency: new Param('frequency', 440, this.minFreq, this.maxFreq),\n        gain:  new Param('gain', 0.5, 0, 1),\n      }\n      this.inputs = [this.dsp.frequencyInput, this.dsp.gain.gain];\n      this.outputs = [this.dsp.gain];\n      this.octave = 5;\n  }\n\n  componentDidMount() {\n    const {osc, gain} = this.dsp;\n    this.initParams();\n    osc.connect(gain);\n    osc.start();\n\n    this.initInputs();\n    this.props.rebuildLineComponents();\n  }\n\n  initParams = () => {\n    this.dsp.osc.frequency.value = this.state.frequency.absValue;\n    this.dsp.gain.gain.value = 0;\n  }\n\n  initInputs = () => {\n    this.dsp.frequencyInput.gain.value = this.state.frequency.max;\n    this.dsp.frequencyInput.connect(this.dsp.osc.frequency);\n  }\n\n  componentWillUnmount() {\n    this.dsp.osc.stop();\n    this.props.cleanUp(this.name);\n    this.props.rebuildLineComponents();\n  }\n\n  // FOR TESTING\n  togglePlay = () => {\n    if(!this.state.isPlaying) {\n      this.setState({isPlaying: !this.state.isPlaying});\n      this.dsp.gain.gain.linearRampToValueAtTime(this.state.gain.absValue, this.props.audioContext.currentTime + 0.1);\n    } else {\n      this.setState({isPlaying: !this.state.isPlaying});\n      this.dsp.gain.gain.linearRampToValueAtTime(0, this.props.audioContext.currentTime + 0.1);\n    }\n  }\n\n  changeValue = GenericFunctions.changeValue.bind(this);\n\n  changeGain = (value, target, param) => {\n        const relValue = value;\n        let newObj = this.state[param.tag];\n        newObj.relValue = relValue;\n        this.setState({[param.tag]: newObj}, () => {\n          if(this.state.isPlaying) target.linearRampToValueAtTime(this.state[param.tag].absValue, this.props.audioContext.currentTime + 0.1);\n        });\n    if(!this.state.isPlaying) {\n      this.dsp.gain.gain.value = 0;\n    }\n  }\n\n  changeWaveform = (newWaveform) => {\n    const {osc} = this.dsp;\n    this.setState({waveform: newWaveform}, () => {\n      osc.type = newWaveform;\n    });\n  }\n\n  keysToNoteOffsetDict = {\n    'a': 0,\n    'w': 1,\n    's': 2,\n    'e': 3,\n    'd': 4,\n    'f': 5,\n    't': 6,\n    'g': 7,\n    'y': 8,\n    'h': 9,\n    'u': 10,\n    'j': 11,\n    'k': 12,\n  }\n\n  getFrequencyFromKey(key) {\n    let result;\n    let midiNoteNumber;\n    const midiNoteOffset = this.keysToNoteOffsetDict[key];\n    if (midiNoteOffset !== null || midiNoteOffset !== undefined) {\n      midiNoteNumber = this.octave * 12 + midiNoteOffset;\n      result = frequencies[midiNoteNumber];\n      return result;\n    } else {\n      return null;\n    }\n  }\n\n  keyPressHandler(event) {\n    event.preventDefault();\n\n    const absValue = this.getFrequencyFromKey(event.key);\n    if (absValue) {\n      const relValue = (absValue - this.minFreq) / (this.maxFreq - this.minFreq);\n      this.changeValue(relValue, this.dsp.osc.frequency, this.state.frequency);\n    } else if (event.key === 'z') {\n      --this.octave;\n    } else if (event.key === 'x') {\n      ++this.octave;\n    }\n  }\n\n  keyHandlerComponents = [\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"a\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"a\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"w\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"w\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"s\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"s\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"e\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"e\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"d\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"d\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"f\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"f\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"t\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"t\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"g\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"g\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"y\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"y\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"h\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"h\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"u\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"u\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"j\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"j\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"k\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"k\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"z\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"k\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"x\" onKeyHandle={this.keyPressHandler.bind(this)} key=\"k\"/>,\n  ];\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isPlaying && [...this.keyHandlerComponents]}\n        <Draggable\n          handle='.handle'\n          onDrag={this.props.rebuildLineComponents}\n        >\n          <div style={style} className='OscNode'>\n            <div className='handle'>\n              <h1 style={topStyle}>\n                <PlayButton style={{gridColumStart: 1}} onClick={this.togglePlay} isPlaying={this.state.isPlaying} type='audio'/>\n                <p style={{display: 'inline', gridColumStart: 2}}>OSC</p>\n                <DeleteButton style={{gridColumStart: 3}} onClick={this.props.deleteNode.bind(this, this.name)} type='audio'/>\n              </h1>\n            </div>\n            <WaveformSelector changeWaveform={this.changeWaveform} type='audio'/>\n            <Connector\n              type='control-input'\n              id={this.name + '_control-input-1'}\n              audioNode={this.dsp.frequencyInput}\n              select={this.props.select}\n              getSelection={this.props.getSelection}\n              coordinates={{x: -10, y: -4}}\n            />\n            <Setting\n              name='Frequency'\n              unit='Hz'\n              type='audio'\n              changeValue={this.changeValue}\n              target={this.dsp.osc.frequency}\n              value={this.state.frequency}\n              readout={this.props.readout}\n            />\n            <br/>\n            <Connector\n              type='control-input'\n              id={this.name + '_control-input-2'}\n              audioNode={this.dsp.gain.gain}\n              select={this.props.select}\n              getSelection={this.props.getSelection}\n              coordinates={{x: -10, y: -4}}\n            />\n            <Setting\n              name='Gain'\n              unit=''\n              type='audio'\n              changeValue={this.changeGain}\n              target={this.dsp.gain.gain}\n              value={this.state.gain}\n              readout={this.props.readout}/>\n            <br/>\n            <br/>\n            <Connector\n              type='audio-output'\n              id={this.name + '_audio-output-1'}\n              audioNode={this.dsp.gain}\n              select={this.props.select}\n              getSelection={this.props.getSelection}\n              coordinates={{x: 70, y: -20}}\n            />\n          </div>\n        </Draggable>\n      </React.Fragment>\n    );\n  }\n}\n\nconst style = {\n  width:'200px',\n  height:'350px',\n  position: 'absolute',\n  left: '10vw',\n  top: '20vh',\n  backgroundColor: 'var(--secondary1-shade0)',\n}\n\nconst topStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'auto auto auto',\n  width: '100%',\n  height: '64px',\n  flexDirection: 'row',\n  alignContent: 'center',\n  alignItems: 'center',\n  justifyContent: 'space-evenly',\n  color: '#fff',\n  margin: '0px',\n  padding: '0px',\n  backgroundColor: 'var(--secondary1-shade3)',\n  cursor: 'move',\n}\n\nexport default OscNode;\n","import React from 'react';\nimport Setting from './Setting';\nimport Connector from './Connector';\nimport Param from './Param';\nimport GenericFunctions from './GenericFunctions';\nimport Draggable from 'react-draggable';\n\nclass OutputNode extends React.Component {\n  constructor(props) {\n      super(props);\n      this.name = 'OutputNode';\n      this.dsp = {\n        gain: this.props.audioContext.createGain(),\n      };\n      this.state = {\n        gain: new Param('gain', 0.5, 0, 1),\n      };\n      this.boundingBox = React.createRef();\n  }\n\n  componentDidMount() {\n    this.dsp.gain.gain.value = this.state.gain.absValue;\n    this.dsp.gain.connect(this.props.audioContext.destination);\n  }\n\n  render () {\n    return (\n      <Draggable\n        handle='.handle'\n        onDrag={this.props.rebuildLineComponents}\n      >\n        <div style={style}>\n          <div className='handle'>\n            <h1 style={topStyle}>OUT</h1>\n          </div>\n          <Connector\n            type='audio-input'\n            id={this.name + '_audio-input-1'}\n            audioNode={this.dsp.gain}\n            select={this.props.select}\n            getSelection={this.props.getSelection}\n            coordinates={{x: 0, y: 0}}/>\n          <Setting\n          name='Gain'\n          unit=''\n          type='audio'\n          changeValue={GenericFunctions.changeValue.bind(this)}\n          readout={this.props.readout}\n          target={this.dsp.gain.gain}\n          value={this.state.gain}/>\n        <br/>\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nconst style = {\n  width:'170px',\n  height:'150px',\n  position: 'absolute',\n  right: '5vw',\n  bottom: '10vh',\n  backgroundColor: 'var(--secondary1-shade0)',\n  touchAction: 'none',\n}\n\nconst topStyle = {\n  display: 'flex',\n  width: '100%',\n  height: '64px',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#fff',\n  margin: '0px',\n  padding: '0px',\n  backgroundColor: 'var(--secondary1-shade3)',\n  cursor: 'move',\n}\n\nexport default OutputNode;\n","import React from 'react';\nimport Connector from './Connector';\nimport Setting from './Setting';\nimport Param from './Param';\nimport GenericFunctions from './GenericFunctions';\nimport DeleteButton from './DeleteButton';\nimport Draggable from 'react-draggable';\n\nclass GainNode extends React.Component {\n  constructor(props) {\n      super(props);\n      this.name = 'GainNode' + this.props.id;\n      this.dsp = {\n        gain: this.props.audioContext.createGain(),\n      }\n      this.state = {\n        gain: new Param('gain', 0.5, 0, 1),\n      }\n      this.inputs = [this.dsp.gain];\n      this.outputs = [this.dsp.gain];\n  }\n\n  componentDidMount() {\n    this.initParams();\n    this.props.rebuildLineComponents();\n  }\n\n  componentWillUnmount() {\n    this.props.cleanUp(this.name);\n    this.props.rebuildLineComponents();\n  }\n\n  initParams = () => {\n    this.dsp.gain.gain.value = this.state.gain.absValue;\n  }\n\n  render() {\n    return (\n      <Draggable\n        handle='.handle'\n        onDrag={this.props.rebuildLineComponents}\n      >\n        <div style={style}className='GainNode'>\n          <div className='handle'>\n            <h1 style={topStyle}>\n              <p style={{display: 'inline'}}>GAIN</p>\n              <DeleteButton onClick={this.props.deleteNode.bind(this, this.name)} type='audio'/>\n            </h1>\n          </div>\n          <Connector\n            type='audio-input'\n            id={this.name + '_audio-input-1'}\n            audioNode={this.dsp.gain}\n            select={this.props.select}\n            getSelection={this.props.getSelection}\n            coordinates={{x: 0, y: -4}}/>\n        <Setting\n          name='Gain'\n          unit=''\n          type='audio'\n          changeValue={GenericFunctions.changeValue.bind(this)}\n          target={this.dsp.gain.gain}\n          value={this.state.gain}\n          readout={this.props.readout}/>\n        <Connector\n          type='audio-output'\n          id={this.name + '_audio-output-1'}\n          audioNode={this.dsp.gain}\n          select={this.props.select}\n          getSelection={this.props.getSelection}\n          coordinates={{x: 0, y: -4}}/>\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nconst style = {\n  width:'180px',\n  height:'150px',\n  position: 'absolute',\n  left: '10vw',\n  top: '20vh',\n  backgroundColor: 'var(--secondary1-shade0)',\n}\n\nconst topStyle = {\n  display: 'grid',\n  gridTemplateColumns: '70% auto',\n  width: '100%',\n  height: '64px',\n  flexDirection: 'row',\n  alignContent: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#fff',\n  margin: '0px',\n  padding: '0px',\n  backgroundColor: 'var(--secondary1-shade3)',\n  cursor: 'move',\n}\n\nexport default GainNode;\n","import React from 'react';\n\nclass ProfileSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profileIndex: 0};\n    this.profiles = ['lowpass', 'highpass', 'bandpass', 'notch', 'allpass'];\n    this.vis = {\n      r: 32,\n      colors: this.getColors(),\n    }\n    this.vis.width = 2 * this.vis.r;\n    this.vis.height = 2.5 * this.vis.r;\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const newIndex = (this.state.profileIndex + 1) % this.profiles.length;\n    this.setState( (state, props) => {\n      this.props.changeProfile(this.profiles[newIndex]);\n      return { profileIndex: newIndex};\n    });\n  }\n\n  displayProfile = () => {\n    const waveformPaths = {\n        lowpass: <path\n          fill={'none'}\n          stroke={'#fff'}\n          strokeWidth={1.5}\n          d=\"\n            M -30,-8\n            Q 0,-8 0,-8\n            M 0,-8\n            Q 16,-8 28,16\n          \"\n          />,\n        highpass: <path\n          fill={'none'}\n          stroke={'#fff'}\n          strokeWidth={1.5}\n          d=\"\n            M -30,8\n            Q -16,-8 0,-8\n            M 0,-8\n            Q 16,-8 28,-8\n          \"\n          />,\n        bandpass: <path\n          fill={'none'}\n          stroke={'#fff'}\n          strokeWidth={1.5}\n          d=\"\n            M -30,8\n            Q -16,-8 0,-8\n            M 0,-8\n            Q 16,-8 30,8\n          \"\n          />,\n        notch: <path\n          fill={'none'}\n          stroke={'#fff'}\n          strokeWidth={1.5}\n          d=\"\n            M -32,0\n            Q 0,0 0,32\n            M 0,32\n            Q 0,0 32,0\n          \"\n          />,\n        allpass: <path\n          fill={'none'}\n          stroke={'#fff'}\n          strokeWidth={1.5}\n          d=\"\n          M -32,0\n          Q -16,32 0,0\n          M 0,0\n          Q 16,-32 32,0\n          \"\n          />,\n        };\n    return waveformPaths[this.profiles[this.state.profileIndex]];\n  }\n\n  getColors = () => {\n    if(this.props.type === 'audio') {\n      return [\n        'var(--secondary1-shade0)',\n        'var(--secondary1-shade1)',\n        'var(--secondary1-shade2)',\n        'var(--secondary1-shade3)',\n        'var(--secondary1-shade4)',\n        'var(--secondary1-shade5)',\n      ]\n    } else if (this.props.type === 'control') {\n      return [\n        'var(--secondary2-shade0)',\n        'var(--secondary2-shade1)',\n        'var(--secondary2-shade2)',\n        'var(--secondary2-shade3)',\n        'var(--secondary2-shade4)',\n        'var(--secondary2-shade5)',\n      ]\n    }\n  }\n\n  render () {\n    const {width, height, r, colors} = this.vis;\n    return (\n      <div id='profileselector'>\n        <svg\n          width={width}\n          height={height}\n          onClick={this.handleClick}\n          >\n          <g\n            transform={'translate(x y)'.replace('x', width/2).replace('y', height/2)}\n            style={{cursor: 'pointer'}}\n            >\n            <circle\n              style={{fill: colors[1]}}\n              r={r}\n              />\n            {this.displayProfile()}\n          </g>\n        </svg>\n      </div>\n    )\n\n  }\n}\n\nexport default ProfileSelector;\n","import React from 'react';\nimport Connector from './Connector';\nimport Setting from './Setting';\nimport Param from './Param';\nimport GenericFunctions from './GenericFunctions';\nimport DeleteButton from './DeleteButton';\nimport ProfileSelector from './ProfileSelector';\nimport Draggable from 'react-draggable';\n\nclass FilterNode extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.name = 'FilterNode' + this.props.id;\n      this.dsp = {\n        filter: this.props.audioContext.createBiquadFilter(),\n        frequencyInput: this.props.audioContext.createGain(),\n        qInput: this.props.audioContext.createGain(),\n      }\n      this.state = {\n        frequency: new Param('frequency', 2000, 10, 20000),\n        Q: new Param('Q', 0, 0.0001, 10),\n        type: 'lowpass',\n      }\n      this.inputs = [this.dsp.frequencyInput, this.dsp.qInput, this.dsp.filter]\n      this.outputs = [this.dsp.filter]\n  }\n\n  componentDidMount() {\n    this.initParams();\n    this.initInputs();\n    this.props.rebuildLineComponents();\n  }\n\n  componentWillUnmount() {\n    this.props.cleanUp(this.name);\n    this.props.rebuildLineComponents();\n  }\n\n  initParams = () => {\n    this.dsp.filter.frequency.value = this.state.frequency.absValue;\n    this.dsp.filter.Q.value = this.state.Q.absValue;\n  }\n\n  initInputs = () => {\n    this.dsp.frequencyInput.gain.value = this.state.frequency.max;\n    this.dsp.frequencyInput.connect(this.dsp.filter.frequency);\n\n    this.dsp.qInput.gain.value = this.state.Q.max;\n    this.dsp.qInput.connect(this.dsp.filter.Q);\n  }\n\n  changeProfile = (newProfile) => {\n    const {filter} = this.dsp;\n    this.setState({waveform: newProfile}, () => {\n      filter.type = newProfile;\n    });\n  }\n\n  render() {\n    return (\n      <Draggable\n        handle='.handle'\n        onDrag={this.props.rebuildLineComponents}\n      >\n        <div style={style} className='FilterNode'>\n          <div className='handle'>\n            <h1 style={topStyle}>\n              <p style={{display: 'inline'}}>FLT</p>\n              <DeleteButton type= 'audio' onClick={this.props.deleteNode.bind(this, this.name)} />\n            </h1>\n          </div>\n          <ProfileSelector\n            changeProfile={this.changeProfile}\n            type='audio'/>\n        <Connector\n          type='control-input'\n          id={this.name + '_control-input-1'}\n          audioNode={this.dsp.frequencyInput}\n          select={this.props.select}\n          getSelection={this.props.getSelection}\n          coordinates={{x: -20, y: -4}}/>\n        <Setting\n          name='Frequency'\n          unit='Hz'\n          type='audio'\n          changeValue={GenericFunctions.changeValue.bind(this)}\n          target={this.dsp.filter.frequency}\n          value={this.state.frequency}\n          readout={this.props.readout}/>\n        <br/>\n        <Connector\n          type='control-input'\n          id={this.name + '_control-input-2'}\n          audioNode={this.dsp.qInput}\n          select={this.props.select}\n          getSelection={this.props.getSelection}\n          coordinates={{x: -20, y: -4}}/>\n        <Setting\n          name='Q'\n          unit=''\n          type='audio'\n          changeValue={GenericFunctions.changeValue.bind(this)}\n          target={this.dsp.filter.Q}\n          value={this.state.Q}\n          readout={this.props.readout}/>\n        <br/>\n        <Connector\n          type='audio-input'\n          id={this.name + '_audio-input-1'}\n          audioNode={this.dsp.filter}\n          select={this.props.select}\n          getSelection={this.props.getSelection}\n          coordinates={{x: -35, y: 0}}/>\n        <Connector\n          type='audio-output'\n          id={this.name + '_audio-output-1'}\n          audioNode={this.dsp.filter}\n          select={this.props.select}\n          getSelection={this.props.getSelection}\n          coordinates={{x: 30, y: 0}}/>\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nconst style = {\n  width:'180px',\n  height:'350px',\n  position: 'absolute',\n  left: '10vw',\n  top: '20vh',\n  backgroundColor: 'var(--secondary1-shade0)',\n}\n\nconst topStyle = {\n  display: 'grid',\n  gridTemplateColumns: '70% auto',\n  width: '100%',\n  height: '64px',\n  flexDirection: 'row',\n  alignContent: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#fff',\n  margin: '0px',\n  padding: '0px',\n  backgroundColor: 'var(--secondary1-shade3)',\n  cursor: 'move',\n}\n\nexport default FilterNode;\n","import React from 'react';\nimport Connector from './Connector';\nimport Setting from './Setting';\nimport WaveformSelector from './WaveformSelector';\nimport Param from './Param';\nimport GenericFunctions from './GenericFunctions';\nimport PlayButton from './PlayButton';\nimport DeleteButton from './DeleteButton';\nimport Draggable from 'react-draggable';\n\nclass LFONode extends React.Component {\n  constructor(props) {\n      super(props);\n      this.name = 'LFONode' + this.props.id;\n      this.dsp = {\n        osc: this.props.audioContext.createOscillator(),\n        gain: this.props.audioContext.createGain(),\n        frequencyInput: this.props.audioContext.createGain(),\n      }\n      this.state = {\n        isPlaying: false,\n        waveform: 'sine',\n        frequency: new Param('frequency', 5, 0.001, 20),\n        gain: new Param('gain', 0.5, 0, 1),\n      }\n      this.inputs = [this.dsp.frequencyInput, this.dsp.gain.gain];\n      this.outputs = [this.dsp.gain];\n  }\n\n  componentDidMount() {\n    const {osc, gain} = this.dsp;\n    this.initParams();\n    osc.connect(gain);\n    osc.start();\n\n    this.initInputs();\n    this.props.rebuildLineComponents();\n  }\n\n  initParams = () => {\n    this.dsp.osc.frequency.value = this.state.frequency.absValue;\n    this.dsp.gain.gain.value = 0;\n  }\n\n  initInputs = () => {\n    this.dsp.frequencyInput.gain.value = this.state.gain.max;\n    this.dsp.frequencyInput.connect(this.dsp.osc.frequency);\n  }\n\n  componentWillUnmount() {\n    this.dsp.osc.stop();\n    this.props.cleanUp(this.name);\n    this.props.rebuildLineComponents();\n  }\n\n  // FOR TESTING\n  togglePlay = () => {\n    if(!this.state.isPlaying) {\n      this.setState({isPlaying: !this.state.isPlaying});\n      this.dsp.gain.gain.linearRampToValueAtTime(this.state.gain.absValue, this.props.audioContext.currentTime + 0.1);\n    } else {\n      this.setState({isPlaying: !this.state.isPlaying});\n      this.dsp.gain.gain.linearRampToValueAtTime(0, this.props.audioContext.currentTime + 0.1);\n    }\n  }\n\n  changeWaveform = (newWaveform) => {\n    const {osc} = this.dsp;\n    this.setState({waveform: newWaveform}, () => {\n      osc.type = newWaveform;\n    });\n  }\n\n  changeGain = (value, target, param) => {\n        const relValue = value;\n        let newObj = this.state[param.tag];\n        newObj.relValue = relValue;\n        this.setState({[param.tag]: newObj}, ()=> {\n          if(this.state.isPlaying) target.linearRampToValueAtTime(this.state[param.tag].absValue, this.props.audioContext.currentTime + 0.1);\n        });\n    if(!this.state.isPlaying) {\n      this.dsp.gain.gain.value = 0;\n    }\n  }\n\n  render() {\n    return (\n      <Draggable\n        handle='.handle'\n        onDrag={this.props.rebuildLineComponents}\n      >\n        <div style={style}className='LFONode'>\n        <div className='handle'>\n            <h1 style={topStyle}>\n              <PlayButton style={{gridColumStart: 1}} onClick={this.togglePlay} isPlaying={this.state.isPlaying} type='control'/>\n              <p style={{display: 'inline', gridColumStart: 2}}>LFO</p>\n              <DeleteButton style={{gridColumStart: 3}} onClick={this.props.deleteNode.bind(this, this.name)} type='control'/>\n            </h1>\n          </div>\n          <WaveformSelector changeWaveform={this.changeWaveform} type='control'/>\n          <Connector\n            type='control-input'\n            id={this.name + '_control-input-1'}\n            audioNode={this.dsp.frequencyInput}\n            select={this.props.select}\n            getSelection={this.props.getSelection}\n            coordinates={{x: -10, y: -4}}/>\n          <Setting\n            name='Frequency'\n            unit='Hz'\n            type='control'\n            changeValue={GenericFunctions.changeValue.bind(this)}\n            target={this.dsp.osc.frequency}\n            value={this.state.frequency}\n            readout={this.props.readout}/>\n          <br/>\n          <Connector\n            type='control-input'\n            id={this.name + '_control-input-2'}\n            audioNode={this.dsp.gain.gain}\n            select={this.props.select}\n            getSelection={this.props.getSelection}\n            coordinates={{x: -10, y: -4}}/>\n          <Setting\n            name='Gain'\n            unit=''\n            type='control'\n            changeValue={this.changeGain}\n            target={this.dsp.gain.gain}\n            value={this.state.gain}\n            readout={this.props.readout}/>\n          <br/>\n          <Connector\n            type='control-output'\n            id={this.name + '_control-output-1'}\n            audioNode={this.dsp.gain}\n            select={this.props.select}\n            getSelection={this.props.getSelection}\n            coordinates={{x: 68, y: -3}}/>\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nconst style = {\n  width:'200px',\n  height:'350px',\n  position: 'absolute',\n  left: '10vw',\n  top: '20vh',\n  backgroundColor: 'var(--secondary2-shade0)',\n}\n\nconst topStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'auto auto auto',\n  width: '100%',\n  height: '64px',\n  flexDirection: 'row',\n  alignContent: 'center',\n  alignItems: 'center',\n  justifyContent: 'space-evenly',\n  color: '#fff',\n  margin: '0px',\n  padding: '0px',\n  backgroundColor: 'var(--secondary2-shade3)',\n  cursor: 'move',\n}\n\nexport default LFONode;\n","import React from 'react';\nimport Connector from './Connector';\nimport Setting from './Setting';\nimport Param from './Param';\nimport PlayButton from './PlayButton';\nimport DeleteButton from './DeleteButton';\nimport Draggable from 'react-draggable';\nimport KeyHandler, { KEYPRESS } from 'react-key-handler';\n\nclass EnvelopeNode extends React.Component {\n  constructor(props) {\n      super(props);\n      this.name = 'EnvelopeNode' + this.props.id;\n      this.dsp = {\n        constantSource: this.props.audioContext.createConstantSource(),\n      }\n      this.state = {\n        isPlaying: false,\n        attack: new Param('attack', 0.005, 0, 1),\n        aLevel: new Param('aLevel', 1, 0, 1),\n        decay: new Param('decay', 0.626, 0, 1),\n        sustain:  new Param('sustain', 0.5, 0, 1),\n        release: new Param('release', 0.5, 0, 1),\n      }\n      this.inputs = []\n      this.outputs = [this.dsp.constantSource]\n  }\n\n  componentDidMount() {\n    const {constantSource} = this.dsp;\n    constantSource.offset.value = 0;\n    constantSource.start();\n    this.props.rebuildLineComponents();\n  }\n\n  componentWillUnmount() {\n    if(this.dsp.constantSource) this.dsp.constantSource.stop();\n    this.props.cleanUp(this.name);\n    this.props.rebuildLineComponents();\n  }\n\n\n\n  // FOR TESTING\n  toggleIsPlaying = () => {\n    this.setState({isPlaying: !this.state.isPlaying});\n  }\n\n  triggerEnvelope = () => {\n    //cancelAndHold would be nicer, but isn't supported in firefox\n    this.dsp.constantSource.offset.cancelScheduledValues(0);\n    console.log('Playing env');\n\n    const targetGain = this.state.aLevel.absValue,\n    node = this.dsp.constantSource,\n    endTimes = [\n      this.props.audioContext.currentTime + this.state.attack.absValue,\n      this.props.audioContext.currentTime + this.state.attack.absValue + this.state.decay.absValue,\n      this.props.audioContext.currentTime + this.state.attack.absValue + this.state.decay.absValue + this.state.release.absValue,\n    ];\n\n    node.offset.linearRampToValueAtTime(targetGain, endTimes[0]);\n    node.offset.linearRampToValueAtTime(this.state.sustain.absValue, endTimes[1]);\n    node.offset.linearRampToValueAtTime(0, endTimes[2])\n  }\n\n  changeValue = (relValue, target, param) => {\n    let newObj = this.state[param.tag];\n    newObj.relValue = relValue;\n    this.setState({[param.tag]: newObj}, ()=> {\n    });\n  }\n\n  keyHandlerComponents = [\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"a\" onKeyHandle={this.triggerEnvelope} key=\"a\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"w\" onKeyHandle={this.triggerEnvelope} key=\"w\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"s\" onKeyHandle={this.triggerEnvelope} key=\"s\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"e\" onKeyHandle={this.triggerEnvelope} key=\"e\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"d\" onKeyHandle={this.triggerEnvelope} key=\"d\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"f\" onKeyHandle={this.triggerEnvelope} key=\"f\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"t\" onKeyHandle={this.triggerEnvelope} key=\"t\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"g\" onKeyHandle={this.triggerEnvelope} key=\"g\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"y\" onKeyHandle={this.triggerEnvelope} key=\"y\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"h\" onKeyHandle={this.triggerEnvelope} key=\"h\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"u\" onKeyHandle={this.triggerEnvelope} key=\"u\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"j\" onKeyHandle={this.triggerEnvelope} key=\"j\"/>,\n    <KeyHandler keyEventName={KEYPRESS} keyValue=\"k\" onKeyHandle={this.triggerEnvelope} key=\"k\"/>,\n  ];\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isPlaying && [...this.keyHandlerComponents]}\n        <Draggable\n          handle='.handle'\n          onDrag={this.props.rebuildLineComponents}\n        >\n          <div style={style}className='EnvelopeNode'>\n            <div className='handle'>\n              <h1 style={topStyle}>\n                <PlayButton onClick={this.toggleIsPlaying} constant={true} type='control'/>\n                <p>ENV</p>\n                <DeleteButton onClick={this.props.deleteNode.bind(this, this.name)} type='control'/>\n              </h1>\n            </div>\n            <Setting name='Attack' unit='s' type='control' changeValue={this.changeValue} target={'none'} value={this.state.attack} readout={this.props.readout} />\n            <Setting name='aLevel' unit='' type='control' changeValue={this.changeValue} target={'none'} value={this.state.aLevel} readout={this.props.readout} />\n            <Setting name='Decay' unit='s' type='control' changeValue={this.changeValue} target={'none'} value={this.state.decay} readout={this.props.readout} />\n            <Setting name='Sustain' unit='' type='control' changeValue={this.changeValue} target={'none'} value={this.state.sustain} readout={this.props.readout} />\n            <Setting name='Release' unit='s' type='control' changeValue={this.changeValue} target={'none'} value={this.state.release} readout={this.props.readout} />\n            <br/>\n            <Connector type='control-output' id={this.name + '_control-output-1'} audioNode={this.dsp.constantSource} select={this.props.select} getSelection={this.props.getSelection} coordinates={{x: 95, y: -18}}/>\n          </div>\n        </Draggable>\n      </React.Fragment>\n    );\n  }\n}\n\nconst style = {\n  width:'250px',\n  height:'250px',\n  position: 'absolute',\n  left: '10vw',\n  top: '20vh',\n  backgroundColor: 'var(--secondary2-shade0)',\n}\n\nconst topStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'auto auto auto',\n  width: '100%',\n  height: '64px',\n  flexDirection: 'row',\n  alignContent: 'center',\n  alignItems: 'center',\n  justifyContent: 'space-evenly',\n  color: '#fff',\n  margin: '0px',\n  padding: '0px',\n  backgroundColor: 'var(--secondary2-shade3)',\n  cursor: 'move',\n}\n\nexport default EnvelopeNode;\n","import React from 'react'\n\nclass SequencerNodeButtons extends React.Component {\n\n  getButtons = () => {\n    const r = 8,\n        stroke = 6,\n        bounds = r + stroke,\n        rowLength = 8,\n        leftOffset = 10,\n        rowOffsetDistance = 2.5 * bounds,\n        rowCount = Math.ceil(this.props.beats.absValue / rowLength),\n        buttons = [],\n        colors = ['var(--secondary2-shade1)', 'var(--secondary2-shade3)'];\n\n\n    let currentRow = 0,\n        buttonsLeft = this.props.beats.absValue;\n\n    while (currentRow < rowCount) {\n      let currentRowLength = (buttonsLeft > rowLength ? rowLength : buttonsLeft);\n        for (var xOffset = 0; xOffset < currentRowLength; xOffset++) {\n          let betweenDistance = xOffset > 0 ? 8 : 0,\n              key = (xOffset + currentRow * rowLength); // use absolute button number as key\n          buttons.push(\n            <circle\n            cx={bounds + (2*bounds + betweenDistance) * xOffset + leftOffset}\n            cy={bounds + (currentRow * rowOffsetDistance)}\n            r={r}\n            fill={colors[0]}\n            stroke={this.props.active[key] ? colors[1] : colors[0]}\n            strokeWidth={stroke}\n            key={key.toString()}\n            onClick={this.props.onClick.bind(this, key)}\n            />);\n        }\n\n        buttonsLeft -= rowLength;\n        currentRow++;\n    }\n    return (\n      <svg display='inline' onClick={this.props.onClick}>\n        {buttons}\n      </svg>\n    )\n  }\n\n  render () {\n    return (\n      <div>\n        {this.getButtons()}\n      </div>\n    )\n  }\n}\n\nexport default SequencerNodeButtons;\n","class IntegerParam {\n  constructor(tag, abs, min, max) {\n    this.tag = tag;\n    this.min = min;\n    this.max = max;\n    this._relValue = this.fromAbsToRel(abs);\n    this._absValue = Math.round(abs);\n  }\n\n  set relValue(newValue) {\n    this._relValue = newValue;\n    this._absValue = this.fromRelToAbs(newValue);\n  }\n\n  set absValue(newValue) {\n    this._absValue = Math.round(newValue);\n    this._relValue = this.fromAbsToRel(newValue);\n  }\n\n  get relValue() {\n    return this._relValue;\n  }\n\n  get absValue() {\n    return this._absValue;\n  }\n\n  fromRelToAbs = (rel) => {\n    return Math.round((this.max - this.min) * rel + this.min);\n  }\n\n  fromAbsToRel = (abs) => {\n    let rel = (abs - this.min) / (this.max - this.min);\n    return rel;\n  }\n}\n\nexport default IntegerParam;\n","import React from 'react';\nimport Connector from './Connector';\nimport Setting from './Setting';\nimport SequencerNodeButtons from './SequencerNodeButtons';\nimport Param from './Param';\nimport IntegerParam from './IntegerParam';\nimport PlayButton from './PlayButton';\nimport DeleteButton from './DeleteButton';\nimport Draggable from 'react-draggable';\n\n// this class mutates its internal state (this.sequencer) a lot, take care when making changes\n\nclass SequencerNode extends React.Component {\n  constructor(props) {\n      super(props);\n      this.name = 'SequencerNode' + this.props.id;\n      this.dsp = {\n        gate: this.props.audioContext.createConstantSource(),\n      }\n      this.state = {\n        isPlaying: false,\n        bpm: new IntegerParam('bpm', 60, 10, 240),\n        beats: new IntegerParam('beats', 8, 1, 32),\n        gain: new Param('gain', 1, 0, 1),\n        activeBeats: [],\n        beatOffsets: [],\n      }\n      this.sequencer = {\n        currentNote: 0,\n        nextNoteTime: 0.0,\n        lookahead: 25.0,\n        scheduleAheadTime: 0.1,\n        notesInQueue: [],\n      }\n      this.internalEnvelope = {\n        a: 0.1,\n        d: 0.15,\n        r: 0.1,\n      }\n      this.timerID = null;\n      this.inputs = [];\n      this.outputs = [this.dsp.gate];\n  }\n\n  componentDidMount() {\n    const {gate} = this.dsp;\n    gate.offset.setValueAtTime(0, this.props.audioContext.currentTime);\n    gate.start();\n    this.initializeActiveBeats();\n    this.props.rebuildLineComponents();\n  }\n\n  componentWillUnmount() {\n    this.dsp.gate.stop();\n    this.props.cleanUp(this.name);\n    this.props.rebuildLineComponents();\n  }\n\n  initializeActiveBeats = () => {\n    let updatedBeats = [];\n    for (var i = 0; i < this.state.beats.absValue; i++) {\n      updatedBeats.push(false);\n    }\n    this.setState({activeBeats: updatedBeats});\n  }\n\n  // scheduling functions taken from https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Advanced_techniques\n\n  nextNote = () => {\n    const secondsPerBeat = 60.0 / this.state.bpm.absValue;\n    this.sequencer.nextNoteTime += secondsPerBeat;\n    this.sequencer.currentNote++;\n    if(this.sequencer.currentNote === this.state.beats.absValue) this.sequencer.currentNote = 0;\n  }\n\n  scheduleNote = (beatNumber, time) => {\n    this.sequencer.notesInQueue.push({note: beatNumber, time: time});\n    //match the currentNote against the beats toggled active\n    if(this.state.activeBeats.find(\n      (value, index, array) => this.sequencer.currentNote === index && value)) this.sendSignal()\n  }\n\n  scheduler = () => {\n    while (this.sequencer.nextNoteTime < this.props.audioContext.currentTime + this.sequencer.scheduleAheadTime) {\n      this.scheduleNote(this.sequencer.currentNote, this.sequencer.nextNoteTime);\n      this.nextNote();\n    }\n    this.dequeueNotes();\n    this.timerID = window.setTimeout(this.scheduler, this.sequencer.lookahead);\n  }\n\n  dequeueNotes = () => {\n    let currentTime = this.props.audioContext.currentTime;\n    while(this.sequencer.notesInQueue.length && this.sequencer.notesInQueue[0].time < currentTime) {\n      this.sequencer.notesInQueue.splice(0,1);\n    }\n  }\n\n  sendSignal = ()  => {\n    this.dsp.gate.offset.cancelScheduledValues(this.props.audioContext.currentTime);\n    this.dsp.gate.offset.linearRampToValueAtTime(this.state.gain.absValue, this.props.audioContext.currentTime + this.internalEnvelope.a);\n    this.dsp.gate.offset.linearRampToValueAtTime(this.state.gain.absValue, this.props.audioContext.currentTime + this.internalEnvelope.a + this.internalEnvelope.d);\n    this.dsp.gate.offset.linearRampToValueAtTime(0, this.props.audioContext.currentTime + this.internalEnvelope.a + this.internalEnvelope.d + this.internalEnvelope.r);\n\n  }\n\n\n  // FOR TESTING\n  togglePlay = () => {\n    const {isPlaying} = this.state;\n    this.setState({isPlaying: !isPlaying}, () => {\n      if(!isPlaying) {\n        this.sequencer.currentNote = 0;\n        this.sequencer.nextNoteTime = this.props.audioContext.currentTime;\n        this.scheduler();\n      } else {\n        window.clearTimeout(this.timerID);\n      }\n    });\n  }\n\n  changeValue = (relValue, target, param) => {\n    let newObj = this.state[param.tag];\n    newObj.relValue = relValue;\n    this.setState({[param.tag]: newObj}, ()=> {\n    });\n  }\n\n  changeBPM = (value) => {\n    let newObj = this.state.bpm;\n    newObj.relValue = value;\n    this.setState({bpm: newObj}, ()=> {\n    });\n  }\n\n  changeBeats = (value) => {\n    let newObj = this.state.beats;\n    newObj.relValue = value;\n    this.setState({beats: newObj}, ()=> {\n      let activeBeats = this.state.activeBeats;\n\n      // trim the activeBeats array to fit\n      while(activeBeats.length > this.state.beats.absValue) {\n        activeBeats.pop();\n      }\n\n      while(activeBeats.length < this.state.beats.absValue) {\n        activeBeats.push(false);\n      }\n    });\n  }\n\n  renderSequencerButtons = () => {\n    const {beats, activeBeats} = this.state;\n    let buttons = [];\n\n    for (var i = 0; i < beats.absValue; i++) {\n      buttons.push(\n        <button onClick={this.toggleBeat.bind(this, i)} key={i.toString()}>\n          {activeBeats[i] ? 'X' : 'O'}\n        </button>\n      );\n    }\n\n    return buttons;\n  }\n\n  toggleBeat = (index) => {\n    let updatedBeats = this.state.activeBeats;\n    updatedBeats[index] = !updatedBeats[index];\n    this.setState({\n      activeBeats: updatedBeats,\n    });\n  }\n\n  render() {\n    return (\n      <Draggable\n        handle='.handle'\n        onDrag={this.props.rebuildLineComponents}\n      >\n        <div style={style} className='SequencerNode'>\n          <div className='handle'>\n            <h1 style={topStyle}>\n              <PlayButton style={{gridColumStart: 1}} onClick={this.togglePlay} isPlaying={this.state.isPlaying} type='control'/>\n              <p style={{display: 'inline', gridColumStart: 2}}>SEQ</p>\n              <DeleteButton style={{gridColumStart: 3}} onClick={this.props.deleteNode.bind(this, this.name)} type='control'/>\n            </h1>\n          </div>\n          <Setting\n            name='BPM'\n            unit=''\n            type='control'\n            changeValue={this.changeBPM}\n            value={this.state.bpm}\n            readout={this.props.readout}\n          />\n          <Setting\n            name='Beats'\n            unit=''\n            type='control'\n            changeValue={this.changeBeats}\n            value={this.state.beats}\n            readout={this.props.readout}\n          />\n          <Setting\n            name='Gain'\n            unit=''\n            type='control'\n            changeValue={this.changeValue}\n            target={'none'}\n            value={this.state.gain}\n            readout={this.props.readout}\n          />\n          <SequencerNodeButtons\n            onClick={this.toggleBeat}\n            active={this.state.activeBeats}\n            beats={this.state.beats} />\n          <br></br>\n          <Connector type='control-output' id={this.name + '_control-output-1'} audioNode={this.dsp.gate} select={this.props.select} getSelection={this.props.getSelection} coordinates={{x: 115, y: -20}}/>\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nconst style = {\n  width:'300px',\n  height:'350px',\n  position: 'absolute',\n  left: '10vw',\n  top: '20vh',\n  backgroundColor: 'var(--secondary2-shade0)',\n}\n\nconst topStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'auto auto auto',\n  width: '100%',\n  height: '64px',\n  flexDirection: 'row',\n  alignContent: 'center',\n  alignItems: 'center',\n  justifyContent: 'space-evenly',\n  color: '#fff',\n  margin: '0px',\n  padding: '0px',\n  backgroundColor: 'var(--secondary2-shade3)',\n  cursor: 'move',\n}\n\nexport default SequencerNode;\n","import React from 'react';\nimport Connector from './Connector';\nimport Setting from './Setting';\nimport WaveformSelector from './WaveformSelector';\nimport Param from './Param';\nimport GenericFunctions from './GenericFunctions';\nimport DeleteButton from './DeleteButton';\nimport Draggable from 'react-draggable';\n\nclass FMNode extends React.Component {\n  constructor(props) {\n      super(props);\n      this.name = 'FMNode' + this.props.id;\n      this.dsp = {\n        osc: this.props.audioContext.createOscillator(),\n        gain: this.props.audioContext.createGain(),\n        frequencyInput: this.props.audioContext.createGain(),\n      }\n      this.state = {\n        waveform: 'sine',\n        frequency: new Param('frequency', 5, 0.001, 1000),\n        gain: new Param('gain', 0.5, 0, 1),\n      }\n      this.inputs = [this.dsp.frequencyInput, this.dsp.gain.gain];\n      this.outputs = [this.dsp.gain];\n  }\n\n  componentDidMount() {\n    const {osc, gain} = this.dsp;\n    this.initParams();\n    osc.connect(gain);\n    osc.start();\n\n    this.initInputs();\n    this.props.rebuildLineComponents();\n  }\n\n  initParams = () => {\n    this.dsp.osc.frequency.value = this.state.frequency.absValue;\n  }\n\n  initInputs = () => {\n    this.dsp.frequencyInput.gain.value = this.state.gain.max;\n    this.dsp.frequencyInput.connect(this.dsp.osc.frequency);\n  }\n\n  componentWillUnmount() {\n    this.dsp.osc.stop();\n    this.props.cleanUp(this.name);\n    this.props.rebuildLineComponents();\n  }\n\n  changeWaveform = (newWaveform) => {\n    const {osc} = this.dsp;\n    this.setState({waveform: newWaveform}, () => {\n      osc.type = newWaveform;\n    });\n  }\n\n  changeGain = (value, target, param) => {\n        const relValue = value;\n        let newObj = this.state[param.tag];\n        newObj.relValue = relValue;\n        this.setState({[param.tag]: newObj}, ()=> {\n          target.linearRampToValueAtTime(this.state[param.tag].absValue, this.props.audioContext.currentTime + 0.1);\n        });\n  }\n\n  render() {\n    return (\n      <Draggable\n        handle='.handle'\n        onDrag={this.props.rebuildLineComponents}\n      >\n        <div style={style} className='FMNode'>\n        <div className='handle'>\n            <h1 style={topStyle}>\n              <p style={{display: 'inline', gridColumStart: 1}}>FM</p>\n              <DeleteButton style={{gridColumStart: 2}} onClick={this.props.deleteNode.bind(this, this.name)} type='control'/>\n            </h1>\n          </div>\n          <WaveformSelector changeWaveform={this.changeWaveform} type='control'/>\n          <Connector\n            type='control-input'\n            id={this.name + '_control-input-1'}\n            audioNode={this.dsp.frequencyInput}\n            select={this.props.select}\n            getSelection={this.props.getSelection}\n            coordinates={{x: -10, y: -4}}/>\n          <Setting\n            name='Frequency'\n            unit='Hz'\n            type='control'\n            changeValue={GenericFunctions.changeValue.bind(this)}\n            target={this.dsp.osc.frequency}\n            value={this.state.frequency}\n            readout={this.props.readout}/>\n          <br/>\n          <Connector\n            type='control-input'\n            id={this.name + '_control-input-2'}\n            audioNode={this.dsp.gain.gain}\n            select={this.props.select}\n            getSelection={this.props.getSelection}\n            coordinates={{x: -10, y: -4}}/>\n          <Setting\n            name='Gain'\n            unit=''\n            type='control'\n            changeValue={this.changeGain}\n            target={this.dsp.gain.gain}\n            value={this.state.gain}\n            readout={this.props.readout}/>\n          <br/>\n          <Connector\n            type='control-output'\n            id={this.name + '_control-output-1'}\n            audioNode={this.dsp.gain}\n            select={this.props.select}\n            getSelection={this.props.getSelection}\n            coordinates={{x: 68, y: -3}}/>\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nconst style = {\n  width:'200px',\n  height:'350px',\n  position: 'absolute',\n  left: '10vw',\n  top: '20vh',\n  backgroundColor: 'var(--secondary2-shade0)',\n}\n\nconst topStyle = {\n  display: 'grid',\n  gridTemplateColumns: '70% auto',\n  width: '100%',\n  height: '64px',\n  flexDirection: 'row',\n  alignContent: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#fff',\n  margin: '0px',\n  padding: '0px',\n  backgroundColor: 'var(--secondary2-shade3)',\n  cursor: 'move',\n}\n\nexport default FMNode;\n","import React from 'react';\nimport Pallet from './components/Pallet';\nimport BaseNode from './modules/BaseNode';\nimport OscNode from './modules/OscNode';\nimport OutputNode from './modules/OutputNode';\nimport GainNode from './modules/GainNode';\nimport FilterNode from './modules/FilterNode';\nimport LFONode from './modules/LFONode';\nimport EnvelopeNode from './modules/EnvelopeNode';\nimport SequencerNode from './modules/SequencerNode';\nimport FMNode from './modules/FMNode';\nimport LineTo from 'react-lineto';\n\nclass Workspace extends React.Component {\n  constructor(props) {\n    super(props);\n    let nodes = [],\n        selection = [null, null],\n        existingConnections = [],\n        lineComponents = [];\n    this.state = {\n      audioContext: new AudioContext(),\n      nodes,\n      selection,\n      existingConnections,\n      lineComponents,\n    }\n    this.readoutState = {\n      timer: null,\n      fadeTime: 2000,\n      text: '',\n      hidden: true,\n    }\n  }\n\n  getNextFreeId = (type) => {\n    let sameTypeNodes =\n        this.state.nodes.filter((element) => {\n          return element.type.name === type;\n        });\n    sameTypeNodes.sort((a, b) => a.props.id - b.props.id)\n    // check for holes in the array and try to fill them\n    for (var i = 0; i < sameTypeNodes.length; i++) {\n      if(sameTypeNodes[i].props.id > i) {\n        // if the hole is on index 0, just add a node with id 0\n        if (i === 0) {\n          return 0;\n        } else {\n          return sameTypeNodes[i-1].props.id + 1; //if the hole is somewhere in the middle, place new element after last correctly placed element\n        }\n      }\n    }\n    //no holes found; the new element should be placed at the end\n    return sameTypeNodes.length;\n  }\n\n  getSelection = () => this.state.selection;\n\n  createNode = (type) => {\n    let id = this.getNextFreeId(type),\n        newNode;\n    switch (type) {\n      case 'BaseNode':\n        newNode = (<BaseNode\n                    id={id}\n                    key={type + '_' + id}\n                    audioContext={this.state.audioContext}\n                    select={this.select}\n                    deleteNode={this.deleteNode}\n                    cleanUp={this.cleanUp}\n                    getSelection={this.getSelection}\n                    rebuildLineComponents={this.rebuildLineComponents.bind(this)}\n                    readout={this.readout}\n                  />);\n        break;\n      case 'OscNode':\n        newNode = (<OscNode\n                    id={id}\n                    key={type + '_' + id}\n                    audioContext={this.state.audioContext}\n                    select={this.select}\n                    deleteNode={this.deleteNode}\n                    cleanUp={this.cleanUp}\n                    getSelection={this.getSelection}\n                    rebuildLineComponents={this.rebuildLineComponents.bind(this)}\n                    readout={this.readout}\n                  />);\n        break;\n      case 'GainNode':\n        newNode = (<GainNode\n                    id={id}\n                    key={type + '_' + id}\n                    audioContext={this.state.audioContext}\n                    select={this.select}\n                    deleteNode={this.deleteNode}\n                    cleanUp={this.cleanUp}\n                    getSelection={this.getSelection}\n                    rebuildLineComponents={this.rebuildLineComponents.bind(this)}\n                    readout={this.readout}\n                  />);\n        break;\n      case 'FilterNode':\n        newNode = (<FilterNode\n                    id={id}\n                    key={type + '_' + id}\n                    audioContext={this.state.audioContext}\n                    select={this.select}\n                    deleteNode={this.deleteNode}\n                    cleanUp={this.cleanUp}\n                    getSelection={this.getSelection}\n                    rebuildLineComponents={this.rebuildLineComponents.bind(this)}\n                    readout={this.readout}\n                  />);\n        break;\n      case 'LFONode':\n        newNode = (<LFONode\n                    id={id}\n                    key={type + '_' + id}\n                    audioContext={this.state.audioContext}\n                    select={this.select}\n                    deleteNode={this.deleteNode}\n                    cleanUp={this.cleanUp}\n                    getSelection={this.getSelection}\n                    rebuildLineComponents={this.rebuildLineComponents.bind(this)}\n                    readout={this.readout}\n                  />);\n        break;\n      case 'EnvelopeNode':\n        newNode = (<EnvelopeNode\n                    id={id}\n                    key={type + '_' + id}\n                    audioContext={this.state.audioContext}\n                    select={this.select}\n                    deleteNode={this.deleteNode}\n                    cleanUp={this.cleanUp}\n                    getSelection={this.getSelection}\n                    rebuildLineComponents={this.rebuildLineComponents.bind(this)}\n                    readout={this.readout}\n                  />);\n        break;\n      case 'SequencerNode':\n        newNode = (<SequencerNode\n                    id={id}\n                    key={type + '_' + id}\n                    audioContext={this.state.audioContext}\n                    select={this.select}\n                    deleteNode={this.deleteNode}\n                    cleanUp={this.cleanUp}\n                    getSelection={this.getSelection}\n                    rebuildLineComponents={this.rebuildLineComponents.bind(this)}\n                    readout={this.readout}\n                  />);\n        break;\n      case 'FMNode':\n        newNode = (<FMNode\n                    id={id}\n                    key={type + '_' + id}\n                    audioContext={this.state.audioContext}\n                    select={this.select}\n                    deleteNode={this.deleteNode}\n                    cleanUp={this.cleanUp}\n                    getSelection={this.getSelection}\n                    rebuildLineComponents={this.rebuildLineComponents.bind(this)}\n                    readout={this.readout}\n                  />);\n        break;\n      default:\n\n    }\n    this.setState({\n      nodes: [...this.state.nodes, newNode],\n    });\n  }\n\n  deleteNode = (name) => {\n    let updatedNodes = this.state.nodes.filter((node) => {\n      return node.type.name + node.props.id !== name;\n    });\n    this.setState({\n      nodes: [...updatedNodes],\n    });\n    this.forceUpdate();\n  }\n\n  //helper for select to reduce complexity\n  getUpdatedSelection = (index, info) => {\n    let updatedSelection = [...this.state.selection];\n    updatedSelection[index] = info;\n    return updatedSelection;\n  }\n\n  storeConnection = (output, input) => {\n    let type;\n    if ((output.type === \"audio-output\") && (input.type === \"audio-input\")) {\n      type = \"audio\";\n    } else if (\n        (output.type === \"control-output\") &&\n            (input.type === \"control-input\")\n    ) {\n      type = \"control\";\n    }\n    const connection = {type: type, output: output, input: input};\n    const lineComponent = this.buildLineComponentFromConnection(connection);\n\n    this.setState({\n      existingConnections: [...this.state.existingConnections, connection],\n      lineComponents: [...this.state.lineComponents, lineComponent],\n    });\n  }\n\n  removeStoredConnection = (output, input) => {\n    const updatedConnections =\n        this.state.existingConnections.filter((existingConnection) => {\n          return (existingConnection.output.id !== output.id) ||\n              (existingConnection.input.id !== input.id);\n        });\n\n    const lineComponents =\n        this.state.lineComponents.filter((lineComponent) => {\n            return (lineComponent.props.from !== output.id) ||\n                (lineComponent.props.to !== input.id);\n        });\n\n    this.setState({\n      existingConnections: [...updatedConnections],\n      lineComponents : [...lineComponents],\n    });\n  }\n\n  connectionExists = (output, input) => {\n    //get the same connections\n    let sameConnections =\n        this.state.existingConnections.filter((existingConnection) => {\n          return (existingConnection.output.id === output.id) &&\n              (existingConnection.input.id === input.id);\n        });\n    //if there are any, return true\n    return sameConnections.length > 0;\n  }\n\n  // this function assumes that the selection would make a valid connection\n  sortSelection = () => {\n    const first = this.state.selection[0],\n          second = this.state.selection[1];\n\n    let input = (first.type === 'audio-input' || first.type === 'control-input') ? first : second;\n    let output = (first.type === 'audio-output' || first.type === 'control-output') ? first : second;\n\n    return {\n      input: input,\n      output: output,\n    }\n  }\n\n  isSelectionValidConnection = () => {\n    const first = this.state.selection[0],\n          second = this.state.selection[1],\n          firstNodeName = first.id.slice(0, first.id.indexOf('_')),\n          secondNodeName = second.id.slice(0, second.id.indexOf('_'));\n    let isValid = (\n        (first.type === 'control-output' && second.type === 'control-input') ||\n        (first.type === 'control-input' && second.type === 'control-output') ||\n        (first.type === 'audio-output' && second.type === 'audio-input') ||\n        (first.type === 'audio-input' && second.type === 'audio-output')\n      ) && (firstNodeName !== secondNodeName);\n    return isValid;\n  }\n\n  toggleConnection = () => {\n    if(this.isSelectionValidConnection()) {\n      const {input, output} = this.sortSelection();\n      if (this.connectionExists(output, input)) {\n        output.audioNode.disconnect(input.audioNode);\n        this.removeStoredConnection(output, input);\n      } else {\n        output.audioNode.connect(input.audioNode);\n        this.storeConnection(output, input);\n      }\n    } else {\n      alert(\"I can't make that connection. Only connections with an input and an output of the same type between different nodes are allowed.\");\n    }\n  }\n\n  select = (id, type, audioNode) => {\n    let updatedSelection = [...this.state.selection];\n\n    // if bugs with selection occur, check here\n    updatedSelection.some((value, index, _updatedSelection) => {\n      if (value === null) {\n        updatedSelection[index] = { id: id, type: type, audioNode: audioNode };\n      }\n      return value === null;\n    });\n\n    this.setState({selection: updatedSelection}, () => {\n      if(this.state.selection[0] !== null && this.state.selection[1] !== null) {\n        this.toggleConnection();\n        this.setState({selection: [null, null]});\n      }\n    });\n\n  }\n\n  getConnectionColor(connection) {\n    let color;\n      switch (connection.type) {\n        case 'audio': {\n          color = 'var(--secondary1-shade0)';\n          break;\n        }\n        case 'control': {\n          color = 'var(--secondary2-shade0)';\n          break;\n        }\n        default: {\n          color = 'red';\n        }\n      }\n    return color;\n  }\n\n  buildLineComponentFromConnection(connection) {\n    const lineComponent =\n        (<LineTo\n            className='line'\n            from={connection.output.id}\n            to={connection.input.id}\n            borderColor={this.getConnectionColor(connection)}\n            key={connection.output.id + '_' + connection.input.id}\n            {...lineStyle}\n        />);\n      return lineComponent;\n  }\n\n  rebuildLineComponents = function() {\n    this.setState({lineComponents: []});\n\n    let lineComponents = [];\n\n    for (const connection of this.state.existingConnections) {\n      const lineComponent = this.buildLineComponentFromConnection(connection);\n      lineComponents = [...lineComponents, lineComponent];\n    }\n\n    this.setState({lineComponents: lineComponents});\n  }\n\n  createNodeHandlers = {\n    'OSC': this.createNode.bind(this, 'OscNode'),\n    'GAIN': this.createNode.bind(this, 'GainNode'),\n    'FILTER': this.createNode.bind(this, 'FilterNode'),\n    'LFO': this.createNode.bind(this, 'LFONode'),\n    'ENV': this.createNode.bind(this, 'EnvelopeNode'),\n    'SEQ': this.createNode.bind(this, 'SequencerNode'),\n    'FM': this.createNode.bind(this, 'FMNode'),\n  };\n\n  cleanUp = (nodeName) => {\n    for (const connection of this.state.existingConnections) {\n      if (\n          connection.input.id.startsWith(nodeName) ||\n              connection.output.id.startsWith(nodeName)\n      ) {\n        connection.output.audioNode.disconnect(connection.input.audioNode);\n      }\n    }\n\n    const nextConnections =\n        this.state.existingConnections.filter(\n            (connection) => {\n              return (\n                  !(connection.output.id.startsWith(nodeName) ||\n                      connection.input.id.startsWith(nodeName))\n              );\n            }\n        );\n\n    const nextLineComponents =\n        this.state.lineComponents.filter(\n            (lineComponent) => {\n              return (\n                  !(lineComponent.props.from.startsWith(nodeName) ||\n                      lineComponent.props.to.startsWith(nodeName))\n              )\n            }\n        );\n\n    this.setState({\n      existingConnections: nextConnections,\n      lineComponents: nextLineComponents\n    });\n  }\n\n  readout = (name, value) => {\n    clearTimeout(this.readoutState.timer);\n    this.readoutState.text = name.concat(': ', Number(value.absValue).toPrecision(2));\n    this.readoutState.hidden = false;\n\n    this.readoutState.timer = setTimeout(()=>{\n      this.readoutState.text = '';\n      this.readoutState.hidden = true;\n      this.forceUpdate();\n    }, this.readoutState.fadeTime);\n\n    this.forceUpdate();\n  }\n\n\n\n  render() {\n    let newReadoutStyle = {...readoutStyle, visibility: this.readoutState.hidden ? 'hidden' : 'visible'};\n    return (\n      <div\n        className='workspace'\n        style={style}\n        onScroll={this.rebuildLineComponents.bind(this)}\n        >\n        <Pallet createNodeHandlers={this.createNodeHandlers} />\n        {this.state.nodes}\n        <OutputNode\n          id={this.state.nodes.length}\n          audioContext={this.state.audioContext}\n          select={this.select}\n          selection={this.state.selection}\n          getSelection={this.getSelection}\n          rebuildLineComponents={this.rebuildLineComponents.bind(this)}\n          readout={this.readout}\n        />\n        {this.state.lineComponents}\n        <div className='readout' style={newReadoutStyle}>\n          {this.readoutState.text}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst style = {\n  width: '100%',\n  height: '100%',\n  overflow: 'auto',\n  zIndex: '-10',\n  position: 'fixed',\n  backgroundColor: 'var(--primary-shade1)'\n}\n\nconst lineStyle = {\n  borderStyle: 'solid',\n  borderWidth: 5,\n};\n\nconst readoutStyle = {\n  position: 'fixed',\n  padding: '0.5em 2em',\n  bottom: '24px',\n  right: '4px',\n  color: '#fff',\n  backgroundColor: 'var(--primary-shade2)',\n}\n\nexport default Workspace;\n","import React, { Component } from 'react';\nimport './style/colors.css';\nimport './App.css';\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport Workspace from './Workspace'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.id = \"App\";\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Workspace />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}